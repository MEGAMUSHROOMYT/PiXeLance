/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@trim21/gm-fetch/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@trim21/gm-fetch/dist/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GM_fetch)\n/* harmony export */ });\nfunction parseRawHeaders(h) {\n    const s = h.trim();\n    if (!s) {\n        return new Headers();\n    }\n    const array = s.split(\"\\r\\n\").map((value) => {\n        let s = value.split(\":\");\n        return [s[0].trim(), s[1].trim()];\n    });\n    return new Headers(array);\n}\nfunction parseGMResponse(req, res) {\n    return new ResImpl(res.response, {\n        statusCode: res.status,\n        statusText: res.statusText,\n        headers: parseRawHeaders(res.responseHeaders),\n        finalUrl: res.finalUrl,\n        redirected: res.finalUrl === req.url,\n    });\n}\nclass ResImpl {\n    constructor(body, init) {\n        this.rawBody = body;\n        this.init = init;\n        this.body = toReadableStream(body);\n        const { headers, statusCode, statusText, finalUrl, redirected } = init;\n        this.headers = headers;\n        this.status = statusCode;\n        this.statusText = statusText;\n        this.url = finalUrl;\n        this.type = \"basic\";\n        this.redirected = redirected;\n        this._bodyUsed = false;\n    }\n    get bodyUsed() {\n        return this._bodyUsed;\n    }\n    get ok() {\n        return this.status < 300;\n    }\n    arrayBuffer() {\n        if (this.bodyUsed) {\n            throw new TypeError(\"Failed to execute 'arrayBuffer' on 'Response': body stream already read\");\n        }\n        this._bodyUsed = true;\n        return this.rawBody.arrayBuffer();\n    }\n    blob() {\n        if (this.bodyUsed) {\n            throw new TypeError(\"Failed to execute 'blob' on 'Response': body stream already read\");\n        }\n        this._bodyUsed = true;\n        // `slice` will use empty string as default value, so need to pass all arguments.\n        return Promise.resolve(this.rawBody.slice(0, this.rawBody.size, this.rawBody.type));\n    }\n    clone() {\n        if (this.bodyUsed) {\n            throw new TypeError(\"Failed to execute 'clone' on 'Response': body stream already read\");\n        }\n        return new ResImpl(this.rawBody, this.init);\n    }\n    formData() {\n        if (this.bodyUsed) {\n            throw new TypeError(\"Failed to execute 'formData' on 'Response': body stream already read\");\n        }\n        this._bodyUsed = true;\n        return this.rawBody.text().then(decode);\n    }\n    async json() {\n        if (this.bodyUsed) {\n            throw new TypeError(\"Failed to execute 'json' on 'Response': body stream already read\");\n        }\n        this._bodyUsed = true;\n        return JSON.parse(await this.rawBody.text());\n    }\n    text() {\n        if (this.bodyUsed) {\n            throw new TypeError(\"Failed to execute 'text' on 'Response': body stream already read\");\n        }\n        this._bodyUsed = true;\n        return this.rawBody.text();\n    }\n}\nfunction decode(body) {\n    const form = new FormData();\n    body\n        .trim()\n        .split(\"&\")\n        .forEach(function (bytes) {\n        if (bytes) {\n            const split = bytes.split(\"=\");\n            const name = split.shift()?.replace(/\\+/g, \" \");\n            const value = split.join(\"=\").replace(/\\+/g, \" \");\n            form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n    });\n    return form;\n}\nfunction toReadableStream(value) {\n    return new ReadableStream({\n        start(controller) {\n            controller.enqueue(value);\n            controller.close();\n        },\n    });\n}\n\nasync function GM_fetch(input, init) {\n    const request = new Request(input, init);\n    let data;\n    if (init?.body) {\n        data = await request.text();\n    }\n    return await XHR(request, init, data);\n}\nfunction XHR(request, init, data) {\n    return new Promise((resolve, reject) => {\n        if (request.signal && request.signal.aborted) {\n            return reject(new DOMException(\"Aborted\", \"AbortError\"));\n        }\n        GM.xmlHttpRequest({\n            url: request.url,\n            method: gmXHRMethod(request.method.toUpperCase()),\n            headers: Object.fromEntries(new Headers(init?.headers).entries()),\n            data: data,\n            responseType: \"blob\",\n            onload(res) {\n                resolve(parseGMResponse(request, res));\n            },\n            onabort() {\n                reject(new DOMException(\"Aborted\", \"AbortError\"));\n            },\n            ontimeout() {\n                reject(new TypeError(\"Network request failed, timeout\"));\n            },\n            onerror(err) {\n                reject(new TypeError(\"Failed to fetch: \" + err.finalUrl));\n            },\n        });\n    });\n}\nconst httpMethods = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\", \"HEAD\", \"TRACE\", \"OPTIONS\", \"CONNECT\"];\n// a ts type helper to narrow type\nfunction includes(array, element) {\n    return array.includes(element);\n}\nfunction gmXHRMethod(method) {\n    if (includes(httpMethods, method)) {\n        return method;\n    }\n    throw new Error(`unsupported http method ${method}`);\n}\n\n\n//# sourceMappingURL=index.mjs.map\n\n\n//# sourceURL=webpack://PixelPast/./node_modules/@trim21/gm-fetch/dist/index.mjs?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _resources_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./resources.js */ \"./src/resources.js\");\n\nvar resources = new _resources_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\nunsafeWindow.pixelPast = resources;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  resources: resources\n});\n\n//# sourceURL=webpack://PixelPast/./src/index.js?");

/***/ }),

/***/ "./src/lib/reducer.js":
/*!****************************!*\
  !*** ./src/lib/reducer.js ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar _this = undefined;\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n/**\r\n * author: runas.exe\r\n */\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function () {\n  var getIndexValue = function getIndexValue(e, n) {\n    var _Object$values;\n    return ((_Object$values = Object.values(e || {})) === null || _Object$values === void 0 ? void 0 : _Object$values[n]) || null;\n  };\n  var getIndexNames = function getIndexNames(e, n, f) {\n    var _n$split, _n$split2, _Object$values$filter;\n    return (_n$split = n.split(':'), _n$split2 = _slicedToArray(_n$split, 2), n = _n$split2[0], f = _n$split2[1]), ((_Object$values$filter = Object.values(e || {}).filter(function (e) {\n      return getObjectName(e) === n;\n    })) === null || _Object$values$filter === void 0 ? void 0 : _Object$values$filter[f || 0]) || null;\n  };\n  var getIndexValues = function getIndexValues(e, n) {\n    return (n || []).forEach(function (d) {\n      return e = (typeof d === 'number' ? getIndexValue : getIndexNames)(e, d);\n    }), e || null;\n  };\n  var getRoot = function getRoot() {\n    return window.document.getElementById('root');\n  };\n  var getStore = function getStore() {\n    return getIndexValues(getRoot(), [0, 6, 6, 4, 7, 3]);\n  };\n  var reducer = {};\n  reducer.initList = reducer.initList || [];\n  reducer.inited = reducer.inited || false;\n  reducer.init = reducer.init || function (callback) {\n    if (reducer.inited) {\n      callback();\n    } else {\n      reducer.initList.push(callback);\n    }\n  };\n  reducer.dispatchOriginal = null;\n  reducer.dispatchOriginalCall = null;\n  reducer.dispatch = function (event) {\n    var _store$findByIndex;\n    var store = getStore();\n    return store === null || store === void 0 || (_store$findByIndex = store[findByIndex(store, 3)]) === null || _store$findByIndex === void 0 ? void 0 : _store$findByIndex.call(store, event);\n  };\n  reducer.patchReduce = reducer.patchReduce || function (patchFunction, mode) {\n    var store = getStore();\n    if (!store || !patchFunction) {\n      return false;\n    }\n    var reducerName = findByIndex(store, 0);\n    var reducerCallback = store[reducerName];\n    if (!reducer.reduceOriginal) {\n      reducer.reduceOriginal = reducerCallback;\n    }\n    if (!reducer.reduceOriginalCall) {\n      reducer.reduceOriginalCall = reducer.reduceOriginal.bind(_this);\n    }\n    switch (mode || 0) {\n      case 0:\n        // Выполнение до вызова оригинальной функции\n        store[reducerName] = function (action, state) {\n          var tempState = patchFunction.call(this, action, state, reducerCallback) || state;\n          return reducerCallback.call(this, action, tempState);\n        };\n        break;\n      case 1:\n        // Выполнение после вызова оригинальной функции\n        store[reducerName] = function (action, state) {\n          var tempState = reducerCallback.call(this, action, state);\n          return patchFunction.call(this, action, tempState, reducerCallback) || tempState;\n        };\n        break;\n      case 2:\n        // Выполнение вместо вызова оригинальной функции\n        store[reducerName] = function (action, state) {\n          return patchFunction.call(this, action, state, reducerCallback) || state;\n        };\n        break;\n      default:\n        return false;\n    }\n    return true;\n  };\n  var reduceLogInterval = setInterval(function () {\n    if (getStore()) {\n      clearInterval(reduceLogInterval);\n      if (reducer.initList) {\n        reducer.initList.forEach(function (element) {\n          element();\n        });\n        reducer.inited = true;\n      }\n    }\n  }, 50);\n  return reducer;\n})());\n\n//# sourceURL=webpack://PixelPast/./src/lib/reducer.js?");

/***/ }),

/***/ "./src/lib/setMetadataOf.js":
/*!**********************************!*\
  !*** ./src/lib/setMetadataOf.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\r\n * author: runas.exe\r\n */\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function () {\n  var getClassName = function getClassName(object) {\n    var _object$$metadata$;\n    return object === null || object === void 0 || (_object$$metadata$ = object.$metadata$) === null || _object$$metadata$ === void 0 ? void 0 : _object$$metadata$.simpleName;\n  };\n  var hook = {};\n  var getAllObjectStore = function getAllObjectStore() {\n    var allClassObjects = [];\n    Object.defineProperty(Object.prototype, '$metadata$', {\n      configurable: true,\n      enumerable: false,\n      set: function set(value) {\n        Object.defineProperty(this, '$metadata$', {\n          configurable: true,\n          enumerable: true,\n          writable: true,\n          value: value\n        });\n        if (value.simpleName && !allClassObjects.includes(this)) {\n          allClassObjects.push(this);\n          if (hook.process) {\n            var _hook$process;\n            (_hook$process = hook.process) === null || _hook$process === void 0 ? void 0 : _hook$process.call(hook, this);\n          }\n        }\n      },\n      get: function get() {\n        return {};\n      }\n    });\n    setTimeout(function () {\n      delete Object.prototype.$metadata$;\n    }, 30000);\n    return allClassObjects;\n  };\n  hook.process = null;\n  hook.all = getAllObjectStore();\n  hook.getObject = function (n) {\n    return hook.all.filter(function (e) {\n      return getClassName(e) === n;\n    });\n  };\n  hook.getObjectOnce = function (n) {\n    return hook.all.find(function (e) {\n      return getClassName(e) === n;\n    }) || null;\n  };\n  return hook;\n})());\n\n//# sourceURL=webpack://PixelPast/./src/lib/setMetadataOf.js?");

/***/ }),

/***/ "./src/resources.js":
/*!**************************!*\
  !*** ./src/resources.js ***!
  \**************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Resources)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\n/* harmony import */ var _lib_reducer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/reducer.js */ \"./src/lib/reducer.js\");\n/* harmony import */ var _lib_setMetadataOf_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/setMetadataOf.js */ \"./src/lib/setMetadataOf.js\");\n/* harmony import */ var _trim21_gm_fetch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @trim21/gm-fetch */ \"./node_modules/@trim21/gm-fetch/dist/index.mjs\");\n/* harmony import */ var _package_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../package.json */ \"./package.json\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\n\nvar Resources = /*#__PURE__*/_createClass(function Resources() {\n  var _this = this;\n  _classCallCheck(this, Resources);\n  _defineProperty(this, \"resourceOverride\", []);\n  _defineProperty(this, \"resources\", null);\n  _defineProperty(this, \"reloadableResources\", []);\n  _defineProperty(this, \"originalFetch\", window.fetch);\n  _defineProperty(this, \"fetch\", /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(input, init) {\n      var _decodeResourceUrl, resourceOverriden, resourceUrl, resourseId, index;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            resourceOverriden = false, resourceUrl = input, resourseId = (_decodeResourceUrl = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.decodeResourceUrl)(resourceUrl)) === null || _decodeResourceUrl === void 0 ? void 0 : _decodeResourceUrl.toString();\n            if (!resourseId) {\n              _context.next = 15;\n              break;\n            }\n            index = _this.resourceOverride.length - 1;\n          case 4:\n            if (!(index >= 0)) {\n              _context.next = 15;\n              break;\n            }\n            if (!(resourseId === _this.resourceOverride[index].id && input.search(_this.resourceOverride[index].file) !== -1)) {\n              _context.next = 12;\n              break;\n            }\n            if (!(_this.resourceOverride[index].callback && _this.resourceOverride[index].callback() !== true)) {\n              _context.next = 8;\n              break;\n            }\n            return _context.abrupt(\"break\", 15);\n          case 8:\n            input = _this.resourceOverride[index].url;\n            resourceOverriden = true;\n            console.log(\"Resource overriden from \".concat(resourceUrl, \" to \").concat(input), resourseId);\n            return _context.abrupt(\"return\", (0,_trim21_gm_fetch__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(input, init));\n          case 12:\n            index--;\n            _context.next = 4;\n            break;\n          case 15:\n            resourceOverriden === false && console.debug(\"Resource \".concat(resourceUrl, \" not matched\"), resourseId);\n            _context.next = 21;\n            break;\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n          case 21:\n            return _context.abrupt(\"return\", _this.originalFetch(input, init));\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 18]]);\n    }));\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.parseFile)(\"\".concat(_package_json__WEBPACK_IMPORTED_MODULE_3__.usercontent, \"/resources/meta.json\"), this);\n  unsafeWindow.fetch = this.fetch;\n  _lib_reducer_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].init(function () {\n    var __this__ = _this;\n    unsafeWindow.Long = _lib_setMetadataOf_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getObjectOnce('Long');\n    var ResourceRegistryCommonImpl = _lib_setMetadataOf_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getObjectOnce('ResourceRegistryCommonImpl');\n    if (ResourceRegistryCommonImpl) {\n      var func = Object.entries(ResourceRegistryCommonImpl.prototype)[2][0];\n      ResourceRegistryCommonImpl.prototype[\"\".concat(func, \"_copy\")] = ResourceRegistryCommonImpl.prototype[func];\n      ResourceRegistryCommonImpl.prototype[func] = function () {\n        if (!__this__.resources) {\n          __this__.resources = Object.values(this)[2];\n          __this__.resources.__proto__.remove = Object.values(__this__.resources.__proto__)[8];\n          __this__.resources.__proto__.get = Object.values(__this__.resources.__proto__)[3];\n        }\n        return this[\"\".concat(func, \"_copy\")].apply(this, arguments);\n      };\n    }\n    var World = _lib_setMetadataOf_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getObjectOnce('World');\n    if (World) {\n      var reset = Object.entries(World.prototype)[35][0];\n      World.prototype[\"\".concat(reset, \"_copy\")] = World.prototype[reset];\n      World.prototype[reset] = function () {\n        __this__.reloadableResources.forEach(function (resource) {\n          resource = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toLong)(resource);\n          while (__this__.resources.get(resource)) __this__.resources.remove(resource);\n        });\n        window.сurrentMapMatches = false;\n        return this[\"\".concat(reset, \"_copy\")].apply(this, arguments);\n      };\n    }\n  });\n});\n\n\n//# sourceURL=webpack://PixelPast/./src/resources.js?");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeResourceUrl: () => (/* binding */ decodeResourceUrl),\n/* harmony export */   parseFile: () => (/* binding */ parseFile),\n/* harmony export */   toLong: () => (/* binding */ toLong)\n/* harmony export */ });\n/* harmony import */ var _trim21_gm_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trim21/gm-fetch */ \"./node_modules/@trim21/gm-fetch/dist/index.mjs\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\n/**\r\n * author: sabaka-babaka\r\n * @param {String} str \r\n */\nvar toLong = function toLong(str) {\n  var number = BigInt(str),\n    divisor = 4294967296n,\n    low = Number(BigInt.asIntN(32, number % divisor)),\n    high = Number(BigInt.asIntN(32, number / divisor));\n  return new Long(low, high);\n};\n\n/**\r\n * author: sabaka-babaka\r\n * @param {String} url \r\n */\nvar decodeResourceUrl = function decodeResourceUrl(url) {\n  var _url$match;\n  var resourcePath = (_url$match = url.match(/resources\\/(\\d+\\/\\d+\\/\\d+\\/\\d+\\/\\d+)/)) === null || _url$match === void 0 ? void 0 : _url$match[1];\n  if (!resourcePath) return;\n  var parts = resourcePath.split('/').map(function (n) {\n    return parseInt(n, 8);\n  });\n  var high = parts[0];\n  var low = parts[1] << 16 | parts[2] << 8 | parts[3];\n  return new Long(low, high);\n};\nvar parseFile = function parseFile(url, resources) {\n  return (0,_trim21_gm_fetch__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(url).then( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(response) {\n      var json, _iterator, _step, _loop;\n      return _regeneratorRuntime().wrap(function _callee$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return response.json();\n          case 2:\n            json = _context2.sent;\n            _iterator = _createForOfIteratorHelper(json);\n            _context2.prev = 4;\n            _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop() {\n              var info;\n              return _regeneratorRuntime().wrap(function _loop$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    info = _step.value;\n                    if (info.meta) parseFile(\"\".concat(url.split('meta.json')[0]).concat(info.meta), resources);\n                    if (info.reloadable) if (!resources.reloadableResources.includes(info.id)) resources.reloadableResources.push(info.id);\n                    if (info.file) {\n                      info.url = \"\".concat(url.split('meta.json')[0]).concat(info.file);\n                      resources.resourceOverride.push({\n                        file: info.file,\n                        id: info.id,\n                        url: info.url,\n                        callback: function callback() {\n                          if (info.file.includes('atlas.webp')) return window.сurrentMapMatches = true;\n                          if (!info.reloadable) return true;\n                          if (info.file.includes('3ds')) return window.сurrentMapMatches;\n                          return true;\n                        }\n                      });\n                    }\n                  case 4:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _loop);\n            });\n            _iterator.s();\n          case 7:\n            if ((_step = _iterator.n()).done) {\n              _context2.next = 11;\n              break;\n            }\n            return _context2.delegateYield(_loop(), \"t0\", 9);\n          case 9:\n            _context2.next = 7;\n            break;\n          case 11:\n            _context2.next = 16;\n            break;\n          case 13:\n            _context2.prev = 13;\n            _context2.t1 = _context2[\"catch\"](4);\n            _iterator.e(_context2.t1);\n          case 16:\n            _context2.prev = 16;\n            _iterator.f();\n            return _context2.finish(16);\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee, null, [[4, 13, 16, 19]]);\n    }));\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};\n\n//# sourceURL=webpack://PixelPast/./src/utils.js?");

/***/ }),

/***/ "./package.json":
/*!**********************!*\
  !*** ./package.json ***!
  \**********************/
/***/ ((module) => {

eval("module.exports = JSON.parse('{\"type\":\"module\",\"devDependencies\":{\"@babel/core\":\"^7.22.9\",\"@babel/preset-env\":\"^7.22.9\",\"@webpack-cli/generators\":\"^3.0.7\",\"babel-loader\":\"^9.1.3\",\"prettier\":\"^2.8.8\",\"webpack\":\"^5.88.2\",\"webpack-cli\":\"^5.1.4\"},\"version\":\"1.0.1\",\"name\":\"PixelPast\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/sheezzmee/PixelPast.git\"},\"usercontent\":\"https://raw.githubusercontent.com/sheezzmee/PixelPast/main\",\"author\":\"sheezzmee\",\"license\":\"MIT\",\"bugs\":{\"url\":\"https://github.com/sheezzmee/PixelPast/issues\"},\"homepage\":\"https://github.com/sheezzmee/PixelPast#readme\",\"scripts\":{\"build\":\"webpack --mode=production --node-env=production\",\"build:dev\":\"webpack --mode=development\",\"build:prod\":\"webpack --mode=production --node-env=production\",\"watch\":\"webpack --watch\"},\"dependencies\":{\"@trim21/gm-fetch\":\"^0.1.15\"}}');\n\n//# sourceURL=webpack://PixelPast/./package.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;